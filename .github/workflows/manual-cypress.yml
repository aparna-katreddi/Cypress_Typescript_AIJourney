name: Trigger Cypress Tests from GitHub Actions
# This workflow is triggered manually to run Cypress tests.

on:
  workflow_dispatch:  # üëà allows manual trigger

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # üëà Needed for pushing to gh-pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        run: npx cypress run

      - name: Upload Cypress Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

      # Debug step to check the report files
      - name: Debug Report Files
        if: always()
        run: ls -la cypress/reports/AI_Journey_Reports

      # Extract the report filename dynamically
      - name: Extract Report Filename
        if: always()
        id: extract-report
        run: |
          REPORT_FILE=$(ls cypress/reports/AI_Journey_Reports/ | grep -E '^AI_Journey_Test_Results_Report.*\.html$' | tail -n 1)
          echo "Report filename is $REPORT_FILE"
          echo "report_filename=$REPORT_FILE" >> $GITHUB_OUTPUT  

      - name: Upload Cypress Mochawesome HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/reports/AI_Journey_Reports/*.html

      - name: Upload all reports to gh-pages and update index
        if: always()
        run: |
            git fetch
            git switch gh-pages || git checkout --orphan gh-pages
        
            mkdir -p reports
        
            # Keep all old reports
            cp -r reports/ temp-reports || true
        
            # Copy new reports
            cp cypress/reports/AI_Journey_Reports/*.html reports/
        
            # Generate index.html with all reports
            INDEX_FILE="reports/index.html"
            echo "<!DOCTYPE html><html><head><title>Test Reports</title></head><body>" > $INDEX_FILE
            echo "<h1>Cypress Test Reports</h1><ul>" >> $INDEX_FILE
        
            for file in $(ls reports/AI_Journey_Test_Results_Report_*.html | sort -r); do
              filename=$(basename "$file")
              echo "<li><a href=\"$filename\">$filename</a></li>" >> $INDEX_FILE
            done
        
            echo "</ul></body></html>" >> $INDEX_FILE
        
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
        
            git add reports
            git commit -m "Add test report and update index for run ${{ github.run_id }}" || echo "No changes to commit"
            git push origin gh-pages
        
    # Send Slack notification with the report URL

      - name: Send Slack Notification
        if: always()
        run: |
              REPORT_FILE="${{ steps.extract-report.outputs.report_filename }}"
              BASE_URL="https://${{ github.actor }}.github.io/Cypress_Typescript_AIJourney/reports"
              REPORT_URL="${BASE_URL}/${REPORT_FILE}"
              INDEX_URL="${BASE_URL}/index.html"
          
              echo "Report URL: $REPORT_URL"
              echo "Index URL: $INDEX_URL"
              echo "Slack Webhook URL: ${{ secrets.SLACK_WEBHOOK_URL }}"
              echo "GitHub Run ID: ${{ github.run_id }}"
              echo "GitHub Actor: ${{ github.actor }}"
              echo "GitHub Repository: ${{ github.repository }}"
              echo "GitHub Ref: ${{ github.ref }}"
              echo "GitHub Workflow: ${{ github.workflow }}"
          
              # Determine status emoji
              if [ "${{ job.status }}" == "success" ]; then
                STATUS_EMOJI="‚úÖ"
                STATUS_MSG="*Cypress Test Run Passed!*"
              else
                STATUS_EMOJI="‚ùå"
                STATUS_MSG="*Cypress Test Run Failed!*"
              fi
          
              echo "Job status: ${{ job.status }}"
              echo "Slack message: $STATUS_EMOJI $STATUS_MSG"
          
              curl -X POST -H 'Content-type: application/json' \
                --data "{\"text\": \"$STATUS_EMOJI $STATUS_MSG\nüîó *Latest Report:* <${REPORT_URL}>\nüìÑ *All Reports:* <${INDEX_URL}>\"}" \
                ${{ secrets.SLACK_WEBHOOK_URL }}
          
    
