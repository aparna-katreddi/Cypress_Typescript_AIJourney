name: Trigger Cypress Tests from GitHub Actions
# This workflow is triggered manually to run Cypress tests.

on:
  workflow_dispatch:  # ðŸ‘ˆ allows manual trigger

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # ðŸ‘ˆ Needed for pushing to gh-pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        run: npx cypress run

      - name: Upload Cypress Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

      # Debug step to check the report files
      - name: Debug Report Files
        if: always()
        run: ls -la cypress/reports/AI_Journey_Reports

      # Extract the report filename dynamically
      - name: Extract Report Filename
        if: always()
        id: extract-report
        run: |
          REPORT_FILE=$(ls cypress/reports/AI_Journey_Reports/ | grep -E '^AI_Journey_Test_Results_Report.*\.html$' | tail -n 1)
          echo "Report filename is $REPORT_FILE"
          echo "report_filename=$REPORT_FILE" >> $GITHUB_ENV  # Using $GITHUB_ENV for environment variable

      - name: Upload Cypress Mochawesome HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/reports/AI_Journey_Reports/*.html

      - name: Upload HTML report to gh-pages
        if: always()  # ðŸ‘ˆ ensures this step always runs, even if Cypress tests fail
        run: |
          mkdir -p temp-reports
          cp cypress/reports/AI_Journey_Reports/*.html temp-reports/

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git fetch
          git switch gh-pages || git checkout --orphan gh-pages

          mkdir -p reports
          mv temp-reports/*.html reports/

          git add reports
          git commit -m "Add report from ${{ github.run_id }} at $(date)"
          git push origin gh-pages

        # Generate the index.html file to list all reports
      - name: Generate index.html for Reports
        if: always()
        run: |
          REPORT_FILES=$(ls cypress/reports/AI_Journey_Reports/ | grep -E '^AI_Journey_Test_Results_Report.*\.html$')
          echo "<!DOCTYPE html><html><head><title>Test Reports</title></head><body><h1>Cypress Test Reports</h1><ul>" > cypress/reports/AI_Journey_Reports/index.html
          for file in $REPORT_FILES; do
            echo "<li><a href='${file}'>Report - ${file}</a></li>" >> cypress/reports/AI_Journey_Reports/index.html
          done
          echo "</ul></body></html>" >> cypress/reports/AI_Journey_Reports/index.html

      # Upload the index.html file to gh-pages
      - name: Upload index.html to gh-pages
        if: always()
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch
          git switch gh-pages || git checkout --orphan gh-pages

          mkdir -p reports
          cp cypress/reports/AI_Journey_Reports/index.html reports/

          git add reports/index.html
          git commit -m "Update index.html with new test reports"
          git push origin gh-pages

      # Send Slack notification with the report URL
      - name: Send Slack Notification
        if: always()
        run: |
              REPORT_FILE="${{ steps.extract-report.outputs.report_filename }}"
              REPORT_URL="https://${{ github.actor }}.github.io/Cypress_Typescript_AIJourney/reports/${REPORT_FILE}"
              echo "Full report URL: $REPORT_URL"
              curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\": \"âœ… Cypress Test Run Completed! View the latest test report: $REPORT_URL\"}" \
              ${{ secrets.SLACK_WEBHOOK_URL }}
